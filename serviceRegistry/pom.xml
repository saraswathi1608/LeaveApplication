<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.example</groupId>
  <artifactId>serviceRegistry</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>serviceRegistry</name>
  <url>http://maven.apache.org</url>


  <properties>
        <java.version>1.8</java.version>
        <spring.boot.version>2.6.14</spring.boot.version> <!-- Updated version -->
        <jdbc.version>21.4.0.0.1</jdbc.version>
        <hibernate.version>5.6.3.Final</hibernate.version>
        <persistence-api.version>2.2</persistence-api.version>
        <gson.version>2.8.9</gson.version>
        <log4j.version>2.17.0</log4j.version>
        <spring.cloud.version>3.1.0</spring.cloud.version>
        <spotify.docker.maven.version>1.4.13</spotify.docker.maven.version>
    </properties>

  <build>
	    <plugins>
	        <plugin>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-maven-plugin</artifactId>
	            <version>${spring.boot.version}</version>
	            <executions>
	                <execution>
	                    <goals>
	                        <goal>repackage</goal>
	                    </goals>
	                </execution>
	            </executions>
	        </plugin>
	        <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-compiler-plugin</artifactId>
	            <version>3.8.1</version>
	            <configuration>
	                <source>${java.version}</source>
	                <target>${java.version}</target>
	            </configuration>
	        </plugin>
	        <plugin>
		        <groupId>com.spotify</groupId>
		        <artifactId>dockerfile-maven-plugin</artifactId>
		        <version>${spotify.docker.maven.version}</version>
		        <configuration>
        			<repository>eureka-server</repository>
    			</configuration>
		        <executions>
		          <execution>
		            <phase>package</phase>
		          </execution>
		        </executions>
      		</plugin>
	    </plugins>
	</build>


    <dependencies>
        <!-- Spring Boot Starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring.boot.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>
        
        <dependency>
        	<groupId>org.springframework.cloud</groupId>
       	 	<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
        	<version>${spring.cloud.version}</version>
      	</dependency>
        
        
        <!-- Logging dependencies -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.32</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        
        <!-- JSON dependency -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <!-- Apache POI for Excel support -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>5.0.0</version>
        </dependency>
  </dependencies>
  
  <profiles>
  	<profile>
      <id>Service-Registry</id>
      <properties>
        <revision>2.1.0-platform</revision>
        <spring.app.name>work-hours-registry-server</spring.app.name>
        <active.profiles>default,registry-server</active.profiles>
        <server.overlay.project.artifact.id>registry-server</server.overlay.project.artifact.id>
        <image.name>registry-server</image.name>
        <startup.class>com.example.serviceRegistry.RegistryServer</startup.class>
        <profile.id>Work-Hours-Service-Registry</profile.id>
        <eureka.instance.leaseRenewalIntervalInSeconds>300</eureka.instance.leaseRenewalIntervalInSeconds>
      </properties>
    </profile>
  		
  </profiles>
</project>